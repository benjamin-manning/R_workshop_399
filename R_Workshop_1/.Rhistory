```{r install packages for later}
1 + 2
13 / 2
2 ^ 6
5 * (2 + 3)
1 + 2
13 / 2
2 ^ 6
5 * (2 + 3)
2 ^ 6
2 ^ 6
1 + 2
13 / 2
2 ^ 6
5 * (2 + 3)
1 + 2
13 / 2
2 ^ 6
5 * (2 + 3)
1 + 2
13 / 2
2 ^ 6
5 * (2 + 3)
x = 4
x <- 4
x
x + 2
x = 8
x
x == z
#You can do this with numbers
2 == 2
2 == 3
#you can also do it with variables!
x <- 2
y <- 2
z <- 3
x == y
x == z
1+4
b <-  20
a <-  10
b <-  20
a <-  b
a
average_freshman_age
#using underscore
ben_age <- 26
angela_age <- 130
average_freshman_age <- 18
ben_age
angela_age
average_freshman_age
#using periods
ben.age <- 26
angela.age <- 130
average.freshman.age <- 18
print(1+5)
print(1+5)
1+5
#permanently add 2
x <- x + 2
library(doBy)
install.packages("psych", "doBy", "tidyverse") #Once downloaded, comment out
library(doBy)
install.packages("psych", "tidyverse") #Once downloaded, comment out
install.packages("psych") #Once downloaded, comment out
library(psych)
tapply(d$mpg, d$gear, mean) #mean mpg for cars with each possible amount of gears--3, 4, or 5
library(tidyverse)
# write csv
write_csv(mtcars, "mtcars.csv")
#file.choose() #Use this function to specify file path of data file
# load a csv file
d <- read_csv("mtcars.csv")
library(psych)
tapply(d$mpg, d$gear, mean) #mean mpg for cars with each possible amount of gears--3, 4, or 5
sapply(d, mean) # means for each variable in the dataset
summary(d$mpg) #basic summary statistics
describe(d$hp) #"describe" function from "psych" package; more in-depth summary statistics
table(d$carb, d$am) #table of frequencies
addmargins(table(d$carb, d$am, dnn=c('# of Carburetors','Transmission'))) #adding more info to table
# Taking a look at the distribution
hist(d$wt, col = 'orange', xlab = NA, main = 'Distribution of Weight')
boxplot(d$wt, ylab = 'Weight (in 1000s)')
describe(d$hp) #"describe" function from "psych" package; more in-depth summary statistics
describe(d$hp) #"describe" function from "psych" package; more in-depth summary statistics
table(d$carb, d$am) #table of frequencies
addmargins(table(d$carb, d$am, dnn=c('# of Carburetors','Transmission'))) #adding more info to table
?tapply
?tapply
?sapply
summary(d$mpg) #basic summary statistics
describe(d$hp) #"describe" function from "psych" package; more in-depth summary statistics
table(d$carb, d$am) #table of frequencies
addmargins(table(d$carb, d$am, dnn=c('# of Carburetors','Transmission'))) #adding more info to table
# Taking a look at the distribution
hist(d$wt, col = 'orange', xlab = NA)
boxplot(d$wt, ylab = 'Weight (in 1000s)')
summary(d$mpg) #basic summary statistics
describe(d$hp) #"describe" function from "psych" package; more in-depth summary statistics
table(d$carb, d$am) #table of frequencies
addmargins(table(d$carb, d$am, dnn=c('# of Carburetors','Transmission'))) #adding more info to table
# Taking a look at the distribution
hist(d$wt, col = 'orange', xlab = 'Weights')
boxplot(d$wt, ylab = 'Weight (in 1000s)')
summary(d$mpg) #basic summary statistics
describe(d$hp) #"describe" function from "psych" package; more in-depth summary statistics
table(d$carb, d$am) #table of frequencies
addmargins(table(d$carb, d$am, dnn=c('# of Carburetors','Transmission'))) #adding more info to table
# Taking a look at the distribution
hist(d$wt, col = 'orange', xlab = 'Weights')
boxplot(d$wt, title = 'Weight (in 1000s)')
summary(d$mpg) #basic summary statistics
describe(d$hp) #"describe" function from "psych" package; more in-depth summary statistics
table(d$carb, d$am) #table of frequencies
addmargins(table(d$carb, d$am, dnn=c('# of Carburetors','Transmission'))) #adding more info to table
# Taking a look at the distribution
hist(d$wt, col = 'orange', xlab = 'Weights')
boxplot(d$wt, ylab = 'Weight (in 1000s)')
addmargins(table(d$carb, d$am, dnn=c('# of Carburetors','Transmission'))) #adding more info to table
?addmargins
table(d$carb, d$am,d$wt) #table of frequencies
table(d$carb, d$am) #table of frequencies
View(d)
3+6
1 + 2
13 / 2
2 ^ 6
5 * (2 + 3)
3+6
x <- 'nate'
View(d)
?mean
library(Ben)
detach("package:Ben", unload = TRUE)
install.packages("psych")
install.packages("tidyverse") #Once downloaded, comment out
1 + 2
13 / 2
2 ^ 6
5 * (2 + 3)
x <- 'nate'
1 + 2
13 / 2
2 ^ 6
5 * (2 + 3)
x <- 'nate'
print(1+5)
1+5
x = 4
x <- 4
#print previous x
x
#print x + 2 (temporary)
x + 2
#permanently add 2
x <- x + 2
x
#give x a brand new value unrelated to previous values
x <- 8
x
library(tidyverse)
# write csv
write_csv(mtcars, "mtcars.csv")
#file.choose() #Use this function to specify file path of data file
# load a csv file
d <- read_csv("mtcars.csv")
library(haven)
haven::write_dta(mtcars, "mtcars.dta")
d2 <- haven::read_dta("mtcars.dta")
haven::write_sav(mtcars, "mtcars.sav")
d3 <- haven::read_sav("mtcars.sav")
angela_age <- 51
d <- mtcars
view(d)
#look at the names of all the variables in your dataset
names(d)
#get summary information about all the variables in your dataset (e.g. number of observations, number of missing values, minimum value, max value)
summary(d)
#look at the first 10 observations
head(d)
#look at the last 10 observations
tail(d)
#look at all the variable types of all the variables in your dataset
str(d)
#pull up the whole dataset in a new tab in Rstudio. When knitting the markdown, you can't use this function since the markdown doesn't know how to show the dataset in the final report (the html document).
# View(d)
library(psych)
tapply(d$mpg, d$gear, mean) #mean mpg for cars with each possible amount of gears--3, 4, or 5
?tapply
sapply(d, mean) # means for each variable in the dataset
?sapply
xtabs(mpg ~ cyl + am, data = d)
?xtabs
describeBy(d$mpg, d$am) # from the "psych" package
table(d$cyl,d$am)
rsc_phone
#Quotations
group_size <- "average"
group_size
rsc_name <- "Research Support Center"
rsc_phone <- "8014225114"
#apostrophes
group_size <- 'average'
group_size
rsc_name <- 'Research Support Center'
rsc_phone <- '8014225114'
rsc_phone
rsc_phone <- 8014225114
rsc_phone
xtabs(mpg ~ cyl, data = d)
xtabs(mpg ~ cyl + am, data = d)
table(d$cyl)
table(d$cyl,d$am)
library(tidyverse) # For dplyr, ggplot2, etc.
library(magrittr) # for pipes
library(psych) #for factanal, alpha
##reminder: "header = TRUE" tells the function that the top row of our data is, in fact, variable *names* and not actual data; "stringsAsFactors = TRUE" reads in character (aka string) variables (like our group_f variable) as factors rather than characters.
gm <- read.csv("growth mindset study_cleaned3.csv", header = TRUE, stringsAsFactors = TRUE)
gm %<>% mutate(group_f = ordered(group_f, levels = c("Control", "Self-esteem", "Growth Mindset")))
gm2 %>%
select(id, gpa) %>%
mutate(z_gpa = scale(gpa)) %>%
filter(z_gpa>=3| z_gpa<=-3)
MO_Detection = function (CompleteDataset, AnalyzedDataset, alpha = 0.001) {
Means = colMeans(AnalyzedDataset, na.rm = T)
Covariance = cov(AnalyzedDataset, use = "pairwise.complete.obs")
Distances = mahalanobis(AnalyzedDataset, Means, Covariance)
cutoff = qchisq(1-alpha, ncol(AnalyzedDataset))
remain = Distances < cutoff
PlotData = AnalyzedDataset %>%
mutate(ID = 1:nrow(AnalyzedDataset),
Distance = Distances,
Outlier = factor(remain,labels = c("Yes","No")))
n = nrow(AnalyzedDataset) - sum(remain)
report = paste(n, "cases were multivariate outliers")
print(report)
p = ggplot(PlotData, aes(ID, Distance, color = Outlier)) +
geom_point() +
labs(title = "Multivariate Outliers",
subtitle = report)
theme(legend.position = "bottom")
print(p)
return(CompleteDataset %>% filter(remain))
}
gm_noout = MO_Detection(gm, gm[7:9],alpha =0.001)
gm_noout = MO_Detection(gm, gm[7:9],alpha =0.00000001)
gm_noout = MO_Detection(gm, gm[7:9],alpha =0.000001)
gm_noout = MO_Detection(gm, gm[7:9],alpha = 0.0000001)
gm_noout = MO_Detection(gm, gm[7:9],alpha =0.01)
gm_noout = MO_Detection(gm, gm[7:9],alpha =0.1)
gm_noout = MO_Detection(gm, gm[7:9],alpha =1)
gm_noout = MO_Detection(gm, gm[7:9],alpha =.8)
gm_noout = MO_Detection(gm, gm[7:9],alpha =.5)
sps <- read_csv("Confidence in Science.csv")
View(sps)
