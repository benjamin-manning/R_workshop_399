library(tidyverse) # For dplyr, ggplot2, etc.
library(magrittr) # for pipes
library(psych) #for factanal, alpha
##reminder: "header = TRUE" tells the function that the top row of our data is, in fact, variable *names* and not actual data; "stringsAsFactors = TRUE" reads in character (aka string) variables (like our group_f variable) as factors rather than characters.
gm <- read.csv("growth mindset study_cleaned3.csv", header = TRUE, stringsAsFactors = TRUE)
gm %<>% mutate(group_f = ordered(group_f, levels = c("Control", "Self-esteem", "Growth Mindset")))
##reminder: "header = TRUE" tells the function that the top row of our data is, in fact, variable *names* and not actual data; "stringsAsFactors = TRUE" reads in character (aka string) variables (like our group_f variable) as factors rather than characters.
gm <- read.csv("growth mindset study_cleaned3.csv", header = TRUE, stringsAsFactors = TRUE)
gm %<>% mutate(group_f = ordered(group_f, levels = c("Control", "Self-esteem", "Growth Mindset")))
gm_means <- gm %>%
group_by(group_f) %>%
summarise(gpa_mean = mean(gpa, na.rm = TRUE),
gpa_sd = sd(gpa, na.rm = TRUE),
grit_mean = mean(grit, na.rm = TRUE),
grit_sd = sd(grit, na.rm = TRUE))
gm_means %>%
ggplot(aes(x = group_f, y = gpa_mean)) +
geom_col() +
coord_cartesian(ylim = c(50, 90))
gm_means %>%
ggplot(aes(x = group_f, y = grit_mean)) +
geom_col()
gm_means %>%
ggplot(aes(x = group_f, y = gpa_mean)) +
geom_col() +
geom_errorbar(aes(ymin=gpa_mean-gpa_sd, ymax=gpa_mean+gpa_sd), width=.2) +
coord_cartesian(ylim = c(50, 100))
gm_means %>%
ggplot(aes(x = group_f, y = grit_mean)) +
geom_col() +
geom_errorbar(aes(ymin=grit_mean-grit_sd, ymax=grit_mean+grit_sd), width=.2)
library(tidyverse) # For dplyr, ggplot2, etc.
library(magrittr) # for pipes
library(psych) #for factanal, alpha
##reminder: "header = TRUE" tells the function that the top row of our data is, in fact, variable *names* and not actual data; "stringsAsFactors = TRUE" reads in character (aka string) variables (like our group_f variable) as factors rather than characters.
gm <- read.csv("growth mindset study_cleaned3.csv", header = TRUE, stringsAsFactors = TRUE)
gm %<>% mutate(group_f = ordered(group_f, levels = c("Control", "Self-esteem", "Growth Mindset")))
##reminder: "header = TRUE" tells the function that the top row of our data is, in fact, variable *names* and not actual data; "stringsAsFactors = TRUE" reads in character (aka string) variables (like our group_f variable) as factors rather than characters.
gm <- read.csv("growth mindset study_cleaned3.csv", header = TRUE, stringsAsFactors = TRUE)
gm %<>% mutate(group_f = ordered(group_f, levels = c("Control", "Self-esteem", "Growth Mindset")))
mtcars %>% ggplot(aes(mpg,wt))+geom_point()+
geom_point(data = mtcars %>% summarise_all(mean),size=5,color="red")+
annotate(geom = "label",x = 25,y= 2.5, label = "A",color="blue",shape=7,size=3)+
annotate(geom = "label",x = 25,y= 4,label = "B",color="blue",shape=7,size=3)+
labs(y = "Weight", x= "Mileage")
MO_Detection = function (CompleteDataset, AnalyzedDataset, alpha = 0.001) {
Means = colMeans(AnalyzedDataset, na.rm = T)
Covariance = cov(AnalyzedDataset, use = "pairwise.complete.obs")
Distances = mahalanobis(AnalyzedDataset, Means, Covariance)
cutoff = qchisq(1-alpha, ncol(AnalyzedDataset))
remain = Distances < cutoff
PlotData = AnalyzedDataset %>%
mutate(ID = 1:nrow(AnalyzedDataset),
Distance = Distances,
Outlier = factor(remain,labels = c("Yes","No")))
n = nrow(AnalyzedDataset) - sum(remain)
report = paste(n, "cases were multivariate outliers")
print(report)
p = ggplot(PlotData, aes(ID, Distance, color = Outlier)) +
geom_point() +
labs(title = "Multivariate Outliers",
subtitle = report)
theme(legend.position = "bottom")
print(p)
return(CompleteDataset %>% filter(remain))
}
gm_noout = MO_Detection(gm, gm[7:9])
gm_noout = MO_Detection(gm, gm[7:9],alpha =0.001)
gm_noout = MO_Detection(gm, gm[7:9],alpha =.00000000000000000000000001)
gm_noout = MO_Detection(gm, gm[7:9],alpha =0.00000000001)
gm_noout = MO_Detection(gm, gm[7:9],alpha =0.0001)
gm_noout = MO_Detection(gm, gm[7:9],alpha =0.00001)
gm_noout = MO_Detection(gm, gm[7:9],alpha =0.000001)
gm_noout = MO_Detection(gm, gm[7:9],alpha =0.0000001)
gm_noout = MO_Detection(gm, gm[7:9],alpha =0.00000001)
library(tidyverse) # For dplyr, ggplot2, etc.
library(magrittr) # for pipes
library(psych) #for factanal, alpha
##reminder: "header = TRUE" tells the function that the top row of our data is, in fact, variable *names* and not actual data; "stringsAsFactors = TRUE" reads in character (aka string) variables (like our group_f variable) as factors rather than characters.
gm <- read.csv("growth mindset study_cleaned3.csv", header = TRUE, stringsAsFactors = TRUE)
gm %<>% mutate(group_f = ordered(group_f, levels = c("Control", "Self-esteem", "Growth Mindset")))
gm_means <- gm %>%
group_by(group_f) %>%
summarise(gpa_mean = mean(gpa, na.rm = TRUE),
gpa_sd = sd(gpa, na.rm = TRUE),
grit_mean = mean(grit, na.rm = TRUE),
grit_sd = sd(grit, na.rm = TRUE))
gm_means %>%
ggplot(aes(x = group_f, y = gpa_mean)) +
geom_col() +
coord_cartesian(ylim = c(50, 90))
gm_means %>%
ggplot(aes(x = group_f, y = grit_mean)) +
geom_col()
gm_means %>%
ggplot(aes(x = group_f, y = gpa_mean)) +
geom_col() +
geom_errorbar(aes(ymin=gpa_mean-gpa_sd, ymax=gpa_mean+gpa_sd), width=.2) +
coord_cartesian(ylim = c(50, 100))
gm_means %>%
ggplot(aes(x = group_f, y = grit_mean)) +
geom_col() +
geom_errorbar(aes(ymin=grit_mean-grit_sd, ymax=grit_mean+grit_sd), width=.2)
dots <- c(5, 6, 5, 6, 5, 6)
num <- c(1, 2, 3, 4, 5, 6)
dotsnum <- cbind.data.frame(dots, num)
dotsnum %>% ggplot() +
geom_point(aes(x = num, y = dots)) + coord_cartesian(ylim = c(1, 10))+
geom_point(aes(x = mean(num), y = mean(dots)), colour="red", size = 4) + xlab("Dot Number")+
geom_errorbar(aes(x = mean(num), y = mean(dots), ymin = mean(dots)-sd(dots), ymax = mean(dots)+sd(dots)), width = .001, color = "red")
dots <- c(5, 1, 5, 6, 5, 6)
num <- c(1, 2, 3, 4, 5, 6)
dotsnum <- cbind.data.frame(dots, num)
dotsnum %>% ggplot() +
geom_point(aes(x = num, y = dots)) + coord_cartesian(ylim = c(1, 10))+
geom_point(aes(x = mean(num), y = mean(dots)), color="red", size = 4) + xlab("Dot Number") +
geom_errorbar(aes(x = mean(num), y = mean(dots), ymin = mean(dots)-sd(dots), ymax = mean(dots)+sd(dots)), width = .001, color = "red") +
geom_point(aes(x = mean(num), y = 5.5), color="lightsalmon1", size = 4) #+
#geom_errorbar(aes(x = mean(num), y = 5.5, ymin = 5, ymax = 6), width = .001, color = "lightsalmon1")
gm %>% ggplot() +
geom_boxplot(aes(x = group_f, y = grit))
gm %>% ggplot() +
geom_boxplot(aes(x = group_f, y = gpa))
gm %>% select(id, grit) %>% filter(grit < 1)
gm %>% select(id, gpa) %>% filter(gpa < 50)
#the function ifelse() works like this: ifelse(if_condition, then_do_this, otherwise_do_this). So here, the first one would be read as: "if grit is less than one, than code as missing, otherwise code the same as the original grit variable".
gm2 <- gm %>% mutate(
grit = ifelse(grit < 1, NA, grit),
gpa = ifelse(gpa < 50, NA, gpa)
)
gm2 %>%
select(id, gpa) %>%
mutate(z_gpa = scale(gpa)) %>%
filter(z_gpa>=3| z_gpa<=-3)
gm2 %>%
select(grit) %>%
mutate(z_grit = scale(grit)) %>%
filter(z_grit>=3 | z_grit<=-3)
gm2.no.out <- gm2 %>% mutate(
grit = ifelse(scale(grit) < -3,
NA,
grit)
)
gm_means <- gm2.no.out %>%
group_by(group_f) %>%
summarise(gpa_mean = mean(gpa, na.rm = TRUE),
gpa_sd = sd(gpa, na.rm = TRUE),
grit_mean = mean(grit, na.rm = TRUE),
grit_sd = sd(grit, na.rm = TRUE))
gm_means %>%
ggplot(aes(x = group_f, y = gpa_mean)) +
geom_col() +
geom_errorbar(aes(ymin=gpa_mean-gpa_sd, ymax=gpa_mean+gpa_sd), width=.2) +
coord_cartesian(ylim = c(50, 100))
gm_means %>%
ggplot(aes(x = group_f, y = grit_mean)) +
geom_col() +
geom_errorbar(aes(ymin=grit_mean-grit_sd, ymax=grit_mean+grit_sd), width=.2)
MO_Detection = function (CompleteDataset, AnalyzedDataset, alpha = 0.001) {
Means = colMeans(AnalyzedDataset, na.rm = T)
Covariance = cov(AnalyzedDataset, use = "pairwise.complete.obs")
Distances = mahalanobis(AnalyzedDataset, Means, Covariance)
cutoff = qchisq(1-alpha, ncol(AnalyzedDataset))
remain = Distances < cutoff
PlotData = AnalyzedDataset %>%
mutate(ID = 1:nrow(AnalyzedDataset),
Distance = Distances,
Outlier = factor(remain,labels = c("Yes","No")))
n = nrow(AnalyzedDataset) - sum(remain)
report = paste(n, "cases were multivariate outliers")
print(report)
p = ggplot(PlotData, aes(ID, Distance, color = Outlier)) +
geom_point() +
labs(title = "Multivariate Outliers",
subtitle = report)
theme(legend.position = "bottom")
print(p)
return(CompleteDataset %>% filter(remain))
}
gm.full <- read.csv("growth mindset study.csv")
library(psych)
gm.full %<>% select(starts_with("grit"))
view(gm.full)
gm.full <- read.csv("growth mindset study.csv")
library(psych)
view(gm.full)
grit.a <- alpha(gm.full)
grit.a <- alpha(gm.full)
gm.full %<>% select(starts_with("grit"))
grit.a <- alpha(gm.full)
grit.a
grit.a$total$raw_alpha
rbar <- grit.a$total$average_r
```{r}
k <- 4
alpha.by.hand <- (k*rbar)/(1+(k - 1)*rbar)
alpha.by.hand
#install.packages("kableExtra")
#install.packages("devtools")
#devtools::install_github("crbwin/clnR")
library(knitr)
library(kableExtra)
q_grit <- quos( grit1, grit2, grit3, grit4)
clnR2::alphatize(gm.full, q_grit)
sps = (read.csv("Confidence in Science.csv"))
# View(sps)
KMO(sps)
psych::cortest.bartlett(sps)
sps %>% cor %>% eigen(only.values = T)
sps %>% cor %>% eigen(only.values = T) %>% `$`(values) %>% enframe() %>% ggplot(aes(name,value))+geom_point()+geom_line()
psych::fa.parallel(sps)
#psych::fa.parallel(sps,cor = "poly") #Does the same but based on polychoric rather than pearson correlations.
principal(r = sps,nfactors = 2)
fit = fa(r = sps,nfactors = 2,fm = "uls")
fit
mtcars %>% ggplot(aes(mpg,wt))+geom_point()+
geom_point(data = mtcars %>% summarise_all(mean),size=5,color="red")+
annotate(geom = "label",x = 25,y= 2.5, label = "A",color="blue",shape=7,size=3)+
annotate(geom = "label",x = 25,y= 4,label = "B",color="blue",shape=7,size=3)+
labs(y = "Weight", x= "Mileage")
mtcars
source('~/.active-rstudio-document', echo=TRUE)
mtcars
mtcars %>% ggplot(aes(disp,hp))+geom_point()+
geom_point(data = mtcars %>% summarise_all(mean),size=5,color="red")+
annotate(geom = "label",x = 25,y= 2.5, label = "A",color="blue",shape=7,size=3)+
annotate(geom = "label",x = 25,y= 4,label = "B",color="blue",shape=7,size=3)+
labs(y = "HP", x= "disp")
mtcars
source('~/.active-rstudio-document', echo=TRUE)
?mtcars
gm <- read.csv("growth mindset study_cleaned3.csv", header = TRUE, stringsAsFactors = TRUE)
gm %<>% mutate(group_f = ordered(group_f, levels = c("Control", "Self-esteem", "Growth Mindset")))
View(gm)
gm_means <- gm %>%
group_by(group_f) %>%
summarise(gpa_mean = mean(gpa, na.rm = TRUE),
gpa_sd = sd(gpa, na.rm = TRUE),
grit_mean = mean(grit, na.rm = TRUE),
grit_sd = sd(grit, na.rm = TRUE))
gm_means %>%
ggplot(aes(x = group_f, y = gpa_mean)) +
geom_col() +
coord_cartesian(ylim = c(50, 90))
gm_means %>%
ggplot(aes(x = group_f, y = grit_mean)) +
geom_col()
gm_means %>%
ggplot(aes(x = group_f, y = gpa_mean)) +
geom_col() +
geom_errorbar(aes(ymin=gpa_mean-gpa_sd, ymax=gpa_mean+gpa_sd), width=.2) +
coord_cartesian(ylim = c(50, 100))
gm_means %>%
ggplot(aes(x = group_f, y = grit_mean)) +
geom_col() +
geom_errorbar(aes(ymin=grit_mean-grit_sd, ymax=grit_mean+grit_sd), width=.2)
dots <- c(5, 6, 5, 6, 5, 6)
num <- c(1, 2, 3, 4, 5, 6)
dotsnum <- cbind.data.frame(dots, num)
dotsnum %>% ggplot() +
geom_point(aes(x = num, y = dots)) + coord_cartesian(ylim = c(1, 10))+
geom_point(aes(x = mean(num), y = mean(dots)), colour="red", size = 4) + xlab("Dot Number")+
geom_errorbar(aes(x = mean(num), y = mean(dots), ymin = mean(dots)-sd(dots), ymax = mean(dots)+sd(dots)), width = .001, color = "red")
dots <- c(5, 1, 5, 6, 5, 6)
num <- c(1, 2, 3, 4, 5, 6)
dotsnum <- cbind.data.frame(dots, num)
dotsnum %>% ggplot() +
geom_point(aes(x = num, y = dots)) + coord_cartesian(ylim = c(1, 10))+
geom_point(aes(x = mean(num), y = mean(dots)), color="red", size = 4) + xlab("Dot Number") +
geom_errorbar(aes(x = mean(num), y = mean(dots), ymin = mean(dots)-sd(dots), ymax = mean(dots)+sd(dots)), width = .001, color = "red") +
geom_point(aes(x = mean(num), y = 5.5), color="lightsalmon1", size = 4) #+
#geom_errorbar(aes(x = mean(num), y = 5.5, ymin = 5, ymax = 6), width = .001, color = "lightsalmon1")
gm %>% ggplot() +
geom_boxplot(aes(x = group_f, y = grit))
gm %>% ggplot() +
geom_boxplot(aes(x = group_f, y = gpa))
View(gm)
boxplot(gm$age)
boxplot(mtcars$mpg)
boxplot(mtcars$hp)
gm.full <- read.csv("growth mindset study.csv")
library(psych)
view(gm.full)
library(tidyverse) # For dplyr, ggplot2, etc.
library(magrittr) # for pipes
library(psych) #for factanal, alpha
gm.full <- read.csv("growth mindset study.csv")
library(psych)
view(gm.full)
sps = (read.csv("Confidence in Science.csv"))
View(sps)
sps = (read.csv("Confidence in Science.csv"))
View(sps)
sps %>% cor() %>% round(2)
```{r}
KMO(sps)
psych::cortest.bartlett(sps)
psych::fa.parallel(sps)
```{r}
psych::nfactors(sps)
sps %>% cor %>% eigen(only.values = T) %>% `$`(values) %>% enframe() %>% ggplot(aes(name,value))+geom_point()+geom_line()
# install.packages("corrplot")
sps %>% #data
cor() %>% #generate correlations
corrplot::corrplot(tl.col = "black",order = "hclust") #visualize. Hclust orders correlations.
SE = sqrt(var(diff))
var(diff) = (1/nx + 1/ny) (sum {(x_i - mu_x)^2} + sum{(y_i - mu_y)^2}) / (nx + ny - 2)
nx=5
ny=7
X = cbind(rep(1,nx + ny),
rep(c(0,1),
c(nx, ny)))
X
t(X)%*%X
[12,7,7,7]
c(12,7,7,7)
c(12,7;7,7)
XTX <- t(X)%*%X
1/(12*7-49))*XTX
1/(12*7-49)*XTX
?fa
fit = fa(r = sps,nfactors = 2,fm = "uls",rotate = "oblimin")
print.psych(fit,cut=.3,sort=T)
plot(fit)
fit$scores %>% as.data.frame() %>%
rename(Pseudoscience = ULS1,
Science = ULS2) %>%
mutate(Category = case_when(Science>0 & Pseudoscience>0 ~ "Believes all",
Science<0 & Pseudoscience<0 ~ "Skeptic",
Science>0 & Pseudoscience<0 ~ "Only Science",
Science<0 & Pseudoscience>0 ~ "Only Pseudocience")) %>%
ggplot(aes(Science,Pseudoscience,col=Category))+
geom_point()+
geom_hline(yintercept = 0)+
geom_vline(xintercept = 0)+
labs(title = "Belief in science is unrelated from belief in pseudoscience")+
theme(legend.position = "bottom")
